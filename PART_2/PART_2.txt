Postman. Part 2

http://162.55.220.72:5005/first
1. Отправить запрос.
2. Статус код 200
3. Проверить, что в body приходит правильный string.
-------------------------------------------------------------------
http://162.55.220.72:5005/user_info_3
1. Отправить запрос.
2. Статус код 200
3. Спарсить response body в json.
4. Проверить, что name в ответе равно name s request (name вбить руками.)
5. Проверить, что age в ответе равно age s request (age вбить руками.)
6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)
7. Спарсить request.
8. Проверить, что name в ответе равно name s request (name забрать из request.)
9. Проверить, что age в ответе равно age s request (age забрать из request.)
10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
11. Вывести в консоль параметр family из response.
12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)
	

		let jsonData = pm.response.json();// забрали данные из response body в json (спарсили respons body в json)
		let reqData = request.data; // забрали данные из request
		let reqName = reqData.name; // переменной reqName присвоили свойство объекта 
		let reqAge = reqData.age;
		let reqSalary = reqData.salary;

		//console.log(reqName); // вывели в консоль значение свойства name 


		//MANUAL CHECK
		//4. Проверить, что name в ответе равно name s request (name вбить руками.)
		pm.test("Manual NAME check. ", function () {
		    pm.expect(jsonData.name).to.eql('Kristina');
		});


		//5. Проверить, что age в ответе равно age s request (age вбить руками.)
		pm.test("Manual AGE check", function () {
		    //console.log(typeof jsonData.age,typeof 31);
		    pm.expect(parseInt(jsonData.age)).to.eql(31); //parseInt - str to int
		});


		//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)
		pm.test("Manual SALARY check", function () {
		    pm.expect(jsonData.salary).to.eql(750);
		});


		//CHECK FROM REQUEST
		// 7. Спарсить request.
		// 8. Проверить, что name в ответе равно name s request (name забрать из request.)
		pm.test("Check name from request", function () {
		    pm.expect(jsonData.name).to.eql(reqName);
		});


		//9. Проверить, что age в ответе равно age s request (age забрать из request.)
		pm.test("Check age from request", function () {
		    // console.log(jsonData.age);
		    // console.log(reqAge);
		    pm.expect(jsonData.age).to.eql(reqAge);
		});


		//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
		pm.test("Check salary from request", function () {
		    //console.log(typeof jsonData.salary, typeof reqSalary);
		    pm.expect(jsonData.salary).to.eql(parseInt(reqSalary)); // parseInt - str to int
		});


		//11. Вывести в консоль параметр family из response.
		console.log("Параметр family из response", jsonData.family);


		//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)
		pm.test("Check u_salary_1_5_year from response = salary*4 from request", function () {
		    //console.log(typeof jsonData.salary, typeof reqSalary);
		    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(parseInt(reqSalary*4)); // parseInt - str to int
		});

-------------------------------------------------------------------
http://162.55.220.72:5005/object_info_3
1. Отправить запрос.
2. Статус код 200
3. Спарсить response body в json.
4. Спарсить request.
5. Проверить, что name в ответе равно name s request (name забрать из request.)
6. Проверить, что age в ответе равно age s request (age забрать из request.)
7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
8. Вывести в консоль параметр family из response.
9. Проверить, что у параметра dog есть параметры name.
10. Проверить, что у параметра dog есть параметры age.
11. Проверить, что параметр name имеет значение Luky.
12. Проверить, что параметр age имеет значение 4.

		let jsonData = pm.response.json();// забрали данные из response body в json (спарсили respons body в json)
		let reqData = pm.request.url.query.toObject(); // забрали данные из request
		let reqName = reqData.name; // переменной reqName присвоили свойство объекта 
		let reqAge = reqData.age;
		let reqSalary = reqData.salary;


		console.log(reqName);

		// 5. Проверить, что name в ответе равно name s request (name забрать из request.)
		pm.test("Check NAME from request", function () {
		    pm.expect(jsonData.name).to.eql(reqName);
		});


		//6. Проверить, что age в ответе равно age s request (age забрать из request.)
		pm.test("Check AGE from request", function () {
		    pm.expect(jsonData.age).to.eql(reqAge);
		});


		//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
		pm.test("Check SALARY from request", function () {
		    //console.log(typeof jsonData.salary, typeof reqSalary);
		    pm.expect(jsonData.salary).to.eql(parseInt(reqSalary)); // parseInt - str to int
		});


		//8. Вывести в кон8. Вывести в консоль параметр family из response.
		console.log("Параметр family из response", jsonData.family);


		//9. Проверить, что у параметра dog есть параметры name.
		pm.test("Check NAME parameter IN DOG parameter", function () {
		    pm.expect(jsonData.family.pets.dog).to.have.property("name");
		});


		//10. Проверить, что у параметра dog есть параметры age.
		pm.test("Check AGE parameter IN DOG parameter", function () {
		    pm.expect(jsonData.family.pets.dog).to.have.property("age");
		});


		//11. Проверить, что параметр name имеет значение Luky.
		pm.test("Check NAME parameter = Lucky", function () {
		    pm.expect(jsonData.family.pets.dog.name).to.eql('Luky');
		});


		//12. Проверить, что параметр age имеет значение 4.
		pm.test("Check AGE parameter = 4", function () {
		    pm.expect(jsonData.family.pets.dog.age).to.eql(4);
		});
------------------------------------------------------------


http://162.55.220.72:5005/object_info_4
1. Отправить запрос.
2. Статус код 200
3. Спарсить response body в json.
4. Спарсить request.
5. Проверить, что name в ответе равно name s request (name забрать из request.)
6. Проверить, что age в ответе равно age из request (age забрать из request.)
7. Вывести в консоль параметр salary из request.
8. Вывести в консоль параметр salary из response.
9. Вывести в консоль 0-й элемент параметра salary из response.
10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.
11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.
12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)
13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)
14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)
15. Создать в окружении переменную name
16. Создать в окружении переменную age
17. Создать в окружении переменную salary
18. Передать в окружение переменную name
19. Передать в окружение переменную age
20. Передать в окружение переменную salary
21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.

		let jsonData = pm.response.json();// забрали данные из response body в json (спарсили respons body в json)
		let reqData = pm.request.url.query.toObject(); // забрали данные из request
		let reqName = reqData.name;
		let reqAge = reqData.age;
		let reqSalary = reqData.salary;
		let respSalary = jsonData.salary;

		//5. Проверить, что name в ответе равно name s request (name забрать из request.)
		pm.test("Check NAME", function () {
		    pm.expect(jsonData.name).to.eql(reqName);
		});


		//6. Проверить, что age в ответе равно age из request (age забрать из request.)
		pm.test("Check AGE", function () {
		   //console.log(typeof jsonData.age, typeof reqAge); 
		   pm.expect(jsonData.age).to.eql(parseInt(reqAge));
		});


		//7. Вывести в консоль параметр salary из request.
		console.log("salary from request", reqSalary);


		//8. Вывести в консоль параметр salary из response.
		console.log("salary from response", respSalary);


		//9. Вывести в консоль 0-й элемент параметра salary из response.
		console.log("0-th element of parameter salary from response:", respSalary[0]);


		// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.
		console.log("1-st element of parameter salary from response:", respSalary[1]);


		// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.
		console.log("2-nd element of parameter salary from response:", respSalary[2]);


		// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)
		pm.test("salary[0] from response = 750", function () {
		    pm.expect(jsonData.salary[0]).to.eql(parseInt(reqSalary));
		});


		// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)
		pm.test("salary[1] from response = 2000", function () {
		    //console.log(typeof jsonData.salary, typeof reqSalary);
		    pm.expect(parseInt(jsonData.salary[1])).to.eql(reqSalary*2);
		});


		// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)
		pm.test("salary[2] from response = 3000", function () {
		    pm.expect(parseInt(jsonData.salary[2])).to.eql(reqSalary*3);
		});


		// 15. Создать в окружении переменную name
		// 16. Создать в окружении переменную age
		// 17. Создать в окружении переменную salary


		// 18. Передать в окружение переменную name
		// 19. Передать в окружение переменную age
		// 20. Передать в окружение переменную salary


		// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.
		// let n = jsonData.salary.length;

		// for (let i = 0; i < n; i++) {
		//   console.log("salary", jsonData.salary[i]);
		// }
		// console.log("salary", jsonData.salary[i]);


		// for (var i = 0; i < data.salary.length; i++) {
		//     console.log(data.salary[i]);
		// }

		let s =''
		jsonData.salary.forEach(function(elemSalary) {
		    s = s + " " + elemSalary;
		});
		console.log("Список элементов параметра salary", s);

		// for (var element of data.salary) {
		//     console.log(element);
		// }







